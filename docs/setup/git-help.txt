<<<<<<< HEAD
Git client
==========
To clone students folder
	git clone git@192.168.1.254:/opt/git/students.git

To see the 'status' of 'all' local files
	git status 

To see the 'status' of 'one' local file
	git status  temp.c

To 'add' new file
	git add temp.c 

To  'commit' new file
	git commit temp.c 

To  'push' to server permanentely 
	git push origin master

To  see the 'diff' between local and server file
	git diff temp.c 

To  checkin 'modified' file
	git commit temp.c 

To  see the 'log' of the committed file
	git log temp.c 

To  'get' deleted files
	git checkout .

Diffing with gvim
-----------------
git config --global diff.tool gvimdiff
git config --global difftool.prompt false
git config --global alias.d difftool

NOTE: Now to see diff do 'git d test.c' instead of 'git diff test.c'

Creating new git repository on git server
========================================
- Add new user 'git'
$ sudo adduser git

- Create new repository "py-sources.git" in '/home/git' folder
$ cd /home/git
$ sudo mkdir py-sources.git
$ cd py-sources.git
$ sudo git init --bare
$ cd ..
$ sudo chown -R git:git py-sources.git


- Goto another terminal (cliet)
git clone git@192.168.1.254:/home/git/py-sources.git
cd py-sources
git add first.py
git commit -m "first version"
git push origin master


To add new project 'sources'

In git server
	$ su git
	$ cd /opt/git/
	$ mkdir sources.git
	$ cd sources.git
	$ git init --bare

Creating new repository pavan.git
	$ cd /opt/git/
	$ mkdir pavan.git
	$ cd pavan.git
	$ git init --bare
	$ cd ..
	$ sudo chmod -R 777 pavan.git 

To clone
	git clone /opt/git/pavan.git
	touch t.py
	git status ./
	git add t.py
	git commit -m "Comment"
	git push origin master
	git log ./


- Setting git remote URLs
git remote -v
git remote set-url origin bhagavan@192.168.1.254:/opt/git/auradev.git

In git client
	git clone git@192.168.1.254:/opt/git/sources.git
	
- Add user git
  adduser git 
  ...

- Add group of your own. Example 'embedded'
add group embedded

- Create empty folder /git
  sudo mkdir /git

- Login as git
  su git

- Goto /git
  cd /git

- Create new repository '1test.git'
  git init --bare

- Change repository permissions
  sudo chown git:embedded /git
 
- From client clone the repository
   git clone bhagavan@localhost:/git/1test.git

   NOTE: The user 'bhagavan' should be part 'embedded' group on the git-server


=======
Git client
==========
To clone students folder
	git clone git@192.168.1.254:/opt/git/students.git

To see the 'status' of 'all' local files
	git status 

To see the 'status' of 'one' local file
	git status  temp.c

To 'add' new file
	git add temp.c 

To  'commit' new file
	git commit temp.c 

To  'push' to server permanentely 
	git push origin master

To  see the 'diff' between local and server file
	git diff temp.c 

To  checkin 'modified' file
	git commit temp.c 

To  see the 'log' of the committed file
	git log temp.c 

To  'get' deleted files
	git checkout .

To list only deleted files
    git ls-files --deleted

To remove all deleted files from repository
    git ls-files --deleted | xargs git rm

Diffing with gvim
-----------------
git config --global diff.tool gvimdiff
git config --global difftool.prompt false
git config --global alias.d difftool

NOTE: Now to see diff do 'git d test.c' instead of 'git diff test.c'

Creating new git repository on git server
========================================
- Add new user 'git'
$ sudo adduser git

- Create new repository "py-sources.git" in '/home/git' folder
$ cd /home/git
$ sudo mkdir py-sources.git
$ cd py-sources.git
$ sudo git init --bare
$ cd ..
$ sudo chown -R git:git py-sources.git


- Goto another terminal (cliet)
git clone git@192.168.1.254:/home/git/py-sources.git
cd py-sources
git add first.py
git commit -m "first version"
git push origin master


To add new project 'sources'

In git server
	$ su git
	$ cd /opt/git/
	$ mkdir sources.git
	$ cd sources.git
	$ git init --bare

Creating new repository pavan.git
	$ cd /opt/git/
	$ mkdir pavan.git
	$ cd pavan.git
	$ git init --bare
	$ cd ..
	$ sudo chmod -R 777 pavan.git 

To clone
	git clone /opt/git/pavan.git
	touch t.py
	git status ./
	git add t.py
	git commit -m "Comment"
	git push origin master
	git log ./


- Setting git remote URLs
git remote -v
git remote set-url origin bhagavan@192.168.1.254:/opt/git/auradev.git

In git client
	git clone git@192.168.1.254:/opt/git/sources.git


Distributed Version Control System
- Advantages of Git
Free and open source
Fast and small
Implicit backup
Security
No need of powerful hardware
Easier branching

Blobs - Binary Large Object 

Trees - Tree is an object, which represents a directory

Commits
Commit holds the current state of the repository. A commit is also named by SHA1 hash

Branches
Another line of development. By default, Git has a master branch

Tags
Tag assigns a meaningful name with a specific version in the repository

Clone
Clone operation creates the instance of the repository

Pull
Pull operation copies the changes from a remote repository instance to a local one

Push
Push operation copies changes from a local repository instance to a remote one

HEAD
HEAD is a pointer, which always points to the latest commit in the branch

Revision
Revision represents the version of the source code

URL
URL represents the location of the Git repository

git status
git status ./
git add <filename>
git add *
git rm --cached a.txt
git add -u
git commit -m "Commit message"
git push origin master
git diff a.txt
git log
git log a.txt
git show <hash>
git stash
git stash pop
git stash apply
git stash list
git stash save "add style to our site"
git stash pop stash@{2}
git stash show
git stash clear
git checkout -b feature_x
git checkout master
git branch -d feature_x
git push origin feature_x
git merge feature_x
git diff <source_branch> <target_branch>
git tag 1.0.0 1b2e1d63ff
git log --author=bob
git log --pretty=oneline
git log --graph --oneline --decorate --all
git log --name-status
git checkout -- <filename>
git fetch origin
git reset --hard origin/master

git config color.ui true
git config format.pretty oneline
git add -i
	
>>>>>>> 1a15024c9d008360cd41c49bc6829eb576bbfda4
