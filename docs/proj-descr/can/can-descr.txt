CAN Simulator/Utilities over SocketCAN 
--------------------------------------
SocketCAN is a set of open source CAN drivers over BSD sockets stack in Linux
kernel. Using socketCAN interface built multiple utilities which genarates
different CAN frames.

- SocketCAN utilities are built over RAW sockets where CAN frames are written
  RAW data format
- SocketCAN allows to simulate CAN bus over the TCP/IP Network stack using RAW
  sockets
- It allows different CAN Nodes to communicate over CAN Dev (Network).  Any data
  wrtten on CANDev is received by all CAN nodes who is listening on CANDev.
- CAN Nodes can "apply acceptency filter" by requesting Kernel with different
  CANIDs
- Kernel matches every CANID of every frame, if a match is seen between the
  filter and CAN ID the CAN frame is then accepted by the CAN engine and
  transfered into a CAN Rx buffer.  If match doesn't occurs, frame is dropped.
 
cangen -Is a utility which genarares CAN "standard and extended" frames.  Each frame
		  can be genarated with same or different CANID with different time
		  intervals 
		Based on requirements configurable data can be sent over CAN frames

candump - Is a utility is actually used for debugging purpose.  This listens
		over CANDev and read every CAN frame going over the bus reads dumps it
		in readable format

bcmserver - 
cangw - 
canlogserver - 
isotpserver - 
canfdtest - 

Advantages: Ease of development, Testing, debugging and fixing issues

Need to capture below things
- Error rate - Number of messages drops Vs CANBus
- Bandwidth - Number of fixed length messages sent in a minute Vs CANBus



Tools Used 
Wireshark : is wellknow network traffic analyzer, with which CANFrames can
			be analyzed better
GDB : GNU based source level debugger
gprof Profiler : GNU based profiler where code coverage can be messured.
-------------------------------------------------------------------------




candump 
asc2log,
bcmserver, 
canbusload, 
can-calc-bit-timing,
candump, 
canfdtest, 
cangen, 
cangw, 
canlogserver, 
canplayer, 
cansend,
cansniffer, 
isotpdump, 
isotprecv, 
isotpperf, 
isotpsend, 
isotpserver,
isotpsniffer, 
isotptun, 
log2asc, 
log2long, 
slcan_attach, 
slcand
slcanpty.


Working with opensource projects
---------------------------------
Role: Understding the features of SocketCAN simulator and advantages/Limitations in using for Diagnostics development.

SocketCAN :  Exploring and experimenting with opensource code package user level
application SocketCAN. The SocketCAN package is a simulator for CAN over Linux
Network Sockets. SocketCAN uses the Berkeley socket APIs, Linux network stack
and implements the CAN device drivers as network interfaces.  The CAN socket API
has been designed as similar as possible to the TCP/IP protocols to allow
programmers,familiar with network programming, to easily learn how to use CAN
sockets.

Advantages: 
Ease of building, Loading and Testing : This can be built on a Linux PC using gcc compiler and can run on the same PC and tested

No Device is required : No physical device is required.  CAN Nodes can be simulated by running application

No Kernel Knowledge required:  Since SocketCAN is user level application doesn't required any kind of Kernel development

Using existing Network Infrastructure:  SocketCAN start using existing infrastructure like, Stable and Tested Network APIs, Network monitoring tools,
	  packet genarators, analyzers, debuggers

Ease of genarating raw CAN frames:  Allows to genarate CAN frames and writing into network with different CAN IDs and data

Simulating Frame loss : It is very easy to create and testing CAN Frame loss using existing network utility 'traffic control (tc)'

