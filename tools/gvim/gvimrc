" set the X11 font to use

runtime ftplugin/man.vim
map K \K

" Make command line two lines high
set ch=2

set bs=2 ai ru " for cygwin
" set guioptions-=T " remove headers.

"set guifont=Courier\ 10\ Pitch\ 16
set lines=42 columns=165 tw=80 pvh=14 wrapmargin=8
set ic scs is vb sm so=5
set scr=3 sw=2 sbr=\ \ lsp=2
au BufNewFile,BufRead *.c.*.tmp	setf c
au BufNewFile,BufRead *.h.*.tmp	setf c
set guicursor=n-v-c:block-Cursor/lCursor-blinkwait528-blinkoff0-blinkon1144,ve:ver35-Cursor,o:hor50-Cursor,i-ci:ver25-Cursor/lCursor-blinkwait528-blinkoff0-blinkon1144,r-cr:hor20-Cursor/lCursor,sm:block-Cursor
set tabstop=4
set shiftwidth=4
set novisualbell

"
" maps
"
map <silent> g] g<c-]>
map <silent> <c-s> :w<cr>
map <S-Insert> "*p
imap <S-Insert> <esc>"*pa
cmap <S-Insert> <MiddleMouse>
map <silent> <s-right> :bn<cr>
map <silent> <s-left> :bp<cr>

map  <silent> <a-right> 4zl
imap <silent> <a-right> <c-o>4zl
map  <silent> <a-l> <a-right>
imap <silent> <a-l> <a-right>

map <silent> <a-left> 4zh
imap <silent> <a-left> <c-o>4zh
map  <silent> <a-h> <a-left>
imap <silent> <a-h> <a-left>

map <silent> <a-down> 3<c-e>
imap <silent> <a-down> <c-o>3<c-e>
map  <silent> <a-j> <a-down>
imap <silent> <a-j> <a-down>

map <silent> <a-up> 3<c-y>
imap <silent> <a-up> <c-o>3<c-y>
map  <silent> <a-k> <a-up>
imap <silent> <a-k> <a-up>

map <silent> <c-down> <c-e>
map <silent> <c-j> <c-e>
map <silent> <c-up> <c-y>
map <silent> <c-k> <c-y>

imap <c-h> <left>
cmap <c-h> <left>
imap <c-j> <down>
imap <c-k> <up>
imap <c-l> <right>
cmap <c-l> <right>
imap <c-b> <bs>
cmap <c-b> <bs>
imap <c-s> <c-o><c-s>

map <silent> <s-f9> :%s/\r//g<cr>
map <silent> <f8> :set hls!<cr>
imap <silent> <f8> <esc>:set hls!<cr>a
map <silent> <s-f8> :set ic!<cr>
map <silent> <s-f5> :set nows<cr>/^{<cr>zf%:set ws<cr>
"map <silent> <s-f11> :set fdm=indent<cr>:set fdm=manual<cr>
map <silent> <f6> :set wrap!<cr>
map <silent> <s-f6> :set tw=0<cr>

imap <t_%9> <bs>
cmap <t_%9> <bs>
imap '' <esc>
inoremap '[ <c-o>_
noremap '[ _
inoremap '] <end>
noremap '] <end>
map <a-m> 0gm
imap <a-m> <esc>0gma
map <a-,> 0g$F,
imap <a-,> <esc>0g$F,a
map <a-.> 0g$
imap <a-.> <esc>0g$a
map <a-;> 0g$F;
imap <a-;> <esc>0g$F;a
inoremap '/ _
cnoremap '/ _
omap p ib
vmap p ib
omap P ab
vmap P ab
omap s iB
vmap s iB
omap S aB
vmap S aB

map <c-space> :Tlist<cr>
"imap <c-space> <esc>:Tlist<cr>

  " preview
map <c-a-o> :ped ~/scripts/oporder.txt<cr>
imap <c-a-o> <c-o><c-a-o>
"map <silent> <a-[> <c-w>z
map <silent> <a-[> <c-w>o
imap <silent> <a-[> <c-o><c-w>o
map <silent> <a-]> :execute 'ptj 'TokenUnderCursor(0, 0)<cr>
map <tab> <c-w>w
map <s-tab> <c-w>W
noremap <a-o> <tab>

  " alt clipboard
vmap <a-y> "fy
vmap <a-d> "fd
map <a-p> "fp

" ~~stuff~~
"map <silent> <c-z> :!~/tmp/.lee<cr><cr>
"imap <silent> <c-z> <esc>:!~/tmp/.lee<cr><cr>

"
" reviews
"
map <silent> <f9> rvu
noremap <f7> :execute ':!cvsdiff' TokenUnderCursor(1, 0) '&' <cr><cr>
noremap <a-f7> :execute ':!gvim' TokenUnderCursor(1, 0) <cr><cr>
noremap Rc /^STATUS:<cr>2wcwCLOSED<esc>
noremap Rs /^STATUS:<cr>2wcwRESPONDED<esc>
noremap Rv /^STATUS:<cr>2wcwREVIEWED<esc>/^Duration:<cr>$
noremap Rb yymlGo<esc>pd0ElC:
"noremap gb :execute ':!/usr/bin/konqueror http://bugs/bugs_rg/show_bug.cgi?id='TokenUnderCursor(0, 1)

map <silent> <f3> /^.\{81,\}\\|^\t.\{73,\}\\|^\t\t.\{65,\}\\|^\s*\n\s*$<cr>

"
" c/h
"
let c_syntax_for_h = 1
let c_cpp_comments = 1
let c_minlines = 144

map <silent> <s-f4> <c-home>O/*<space>LICENSE_CODE<space>JUNGO<space>*/<cr><esc>
map <silent> <f4> :!ctags -R --exclude=*stub*<cr><cr>

inoremap {{ {<cr>}<up><cr>
inoremap }} <esc>O{<esc>jo}<esc>kO

inoremap 'wh while ()<left>
inoremap 'sw switch ()<left>
inoremap 'rt return
inoremap 'br break;
inoremap 'co continue;
inoremap 'sz sizeof()<left>
inoremap 'ty typedef<space>
inoremap 'un unsigned<space>
inoremap 'za zalloc_l(sizeof())<left><left>
inoremap 'ip in_addr_t 
inoremap 'rq request

inoremap #de #define<space>
inoremap #in #include<space>
inoremap #en #endif
inoremap #er #error<space>
inoremap #w  #warning<space>
inoremap #id #if defined()<left>
inoremap #ed #elif defined()<left>

inoremap 'lx CONFIG_RG_TARGET_LINUX
inoremap 'vx CONFIG_RG_TARGET_VXWORKS

"
" gvimdiff
"
noremap <F12> <c-W>hzRgg<c-W>lzRgg<c-W>hgg
noremap <s-F12> :so ~/scripts/diftop.vim<cr>
noremap <F11> <c-W>l
noremap <F10> <c-W>h
noremap <silent> <s-F10> :diffget<cr>
noremap <silent> <s-F11> :diffput<cr>
noremap <f1> :execute ':!cvsdiff' TokenUnderCursor(1, 0) '&' <cr><cr>
noremap <f7> :execute ':!cvsdiff' TokenUnderCursor(1, 0) '&' <cr><cr>

if &diff
  map <space> ]czz
  map <cr> ]czz
  map <s-cr> [czz
  map <silent> <f5> :diffup<cr>
  imap <silent> <f5> <esc>:diffup<cr>a
  map <silent> <f2> :set diffopt^=iwhite<cr>
  map <silent> <s-f2> :set diffopt-=iwhite<cr>
  cnoremap q qa

  "set guifont=Courier\ 10\ Pitch\ 12
  "set guifont=-schumacher-clean-medium-r-normal--13-130-75-75-c-60-iso646.1991-irv
  "set guifont=-Schumacher-Clean-Medium-R-Normal--13-130-75-75-C-60-ISO646.1991-IRV
"  set guifont=clean
  set co=165 lines=42 noea
  set guioptions-=rRlL
  set fdm=manual
  set diffopt=filler,context:5000
  set number
endif

set number
set hls
"
" menus
"
aunmenu Help
aunmenu Window
"aunmenu File

"
" cscope - system changes col!!
"
if system("find cscope.out") != ""
	cs add cscope.out
	set cst
endif
"
"reset lines columns, note that they were already set by diff
"
"cnoremap css cs show <cr>
"cnoremap csr cs reset <cr>
"cnoremap cfc cs find c 
"cnoremap cfd cs find d 
"cnoremap cfe cs find e 
"cnoremap cff cs find f 
"cnoremap cfg cs find g 
"cnoremap cfi cs find i 
"cnoremap cfs cs find s 
"cnoremap cft cs find t 
"cnoremap cf cs find  

function! IsTokenChar(is_fname, is_number, char)
	if a:char >= "0" && a:char <= "9"
		return 1
	endif
	if a:is_number
		return 0
	endif
	if a:char == "_"
		return 1
	endif
	if a:char >= "A" && a:char <= "Z"
		return 1
	endif
	if a:char >= "a" && a:char <= "z"
		return 1
	endif
	if a:is_fname && (a:char == "/" || a:char == "." || a:char == "-" || a:char == "~")
		return 1
	endif
	return 0
endfunction

function! TokenUnderCursor(is_fname, is_number)
	echo ""
	let line = getline(".")
	let pos = col(".") - 1

	let begpos = pos -1
	while IsTokenChar(a:is_fname, a:is_number, strpart(line, begpos, 1)) == 1
		let begpos = begpos - 1
	endwhile
	
	let endpos = pos + 1
	while IsTokenChar(a:is_fname, a:is_number, strpart(line, endpos, 1)) == 1
		let endpos = endpos + 1
	endwhile

	return strpart(line, begpos+1, endpos-begpos-1)
endfunction

" Only do this for Vim version 5.0 and later.
if version >= 500

  " I like highlighting strings inside C comments
  let c_comment_strings=1

  " Hide the mouse pointer while typing
  set mousehide

  " Set nice colors
  " background for normal text is light grey
  " Text below the last line is darker grey
  " Cursor is green
  " Constants are not underlined but have a slightly lighter background
  highlight Normal guibg=grey90
  highlight Cursor guibg=Green guifg=NONE
  highlight NonText guibg=grey80
  highlight Constant gui=NONE guibg=grey95
  highlight Special gui=NONE guibg=grey95

endif
map <S-Insert> <MiddleMouse>
map! <S-Insert> <MiddleMouse>
map <C-Up> <C-Y>
map! <C-Up> <ESC><C-Y>a
map <C-Down> <C-E>
map! <C-Down> <ESC><C-E>a
map <C-Tab> :bn<CR>
map! <C-Tab> <ESC>:bn<CR>a
map <C-S-Tab> :bp<CR>
map! <C-S-Tab> <ESC>:bp<CR>a
map <S-Tab> :b#<CR>
map! <S-Tab> <ESC>:b#<CR>
map <S-Home> v0
map! <S-Home> <ESC>v0
map <S-End> v$
map! <S-End> <ESC>lv$
"colorscheme peachpuff
"colorscheme elflord
"set guifont=-schumacher-clean-medium-r-normal--13-130-75-75-c-60-iso646.1991-irv
"set guifont=-adobe-courier-medium-r-normal-*-*-180-*-*-m-*-iso8859-9

" Switch to hex-editor
"noremap <F3> :%!xxd<CR>
noremap <C-x> :%!xxd<CR>
" Switch back
noremap <C-c> :%!xxd -r<CR>
